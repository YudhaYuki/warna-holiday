//////////////////////////////////////////// LOGO ////////////////////////////////////////////
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

//////////////////////////////////////////// SEARCH ////////////////////////////////////////////
.search {
    flex: 0 0 40%;

    display: flex;
    align-items: center;
    justify-content: center;


    &__input {
        font-family: inherit; // Which on input element doesn't inherit the font family of the global document, so we have to automatically set it into inherit
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.5rem; // this way, the button will move on top of the input

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        // To make input text lighter, but when we start typing the text get darker. By changing placeholder text.
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);

        }
    }

    // Adjection sibling (We have the search__input and search__button, and they are sibling)
    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;

        // Changing color svg icon
        fill: var(--color-grey-dark-3);
    }
}


//////////////////////////////////////////// USER NAVIGATION ////////////////////////////////////////////
.user-nav {
    align-self: stretch;

    // Same situation as search bar, where a flex item is also at the same time a flex container
    display: flex;
    align-items: center;

    // We select the direct children
    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    &> *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user {

    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

//////////////////////////////////////////// SIDE NAVIGATION ////////////////////////////////////////////

.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        // transform-origin: bottom; // it starts scaling from bottom, try it...
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s, // The purpose is to let it scale middle to up and down, and then to the width of the navigaton button.
                    background-color .1s;
    }


    // We use scale Y, So usually when we use scale, the lement scales in all of directions so X and Y. 
    // But if we do scale Y, well, then the scale only occurs in the Y direction, so from top to bottom.
    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;

        // To make text visible when we hover it
        position: relative;
        z-index: 10;  // Z-index only works if we spesify the position

        // TO make icons and text align, not to much to the left or right or top or buttom due to the size of the icons
        display: flex;
        align-items: center;
    }

    &__icon {
        width: 1.7rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor; // It basically is just the color of the current element or the parent element
    }
}


//////////////////////////////////////////// LEGAL TEXT ////////////////////////////////////////////
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;
}


//////////////////////////////////////////// GALLERY ////////////////////////////////////////////

.gallery {

    display: flex; // To put the image side by side

    &__photo {
        width: 100%; // We always have to define the width/height in %, so that the image stay fluid.
        display: block; // or inline block this avoid having a little space underneath an image, which happens when we leave it as an inline element
    }
}

//////////////////////////////////////////// HOTEL OVERVIEW ////////////////////////////////////////////

.overview {
    display: flex;
    // justify-content: space-between;
    // we cant use this because it will only create space between those content equally,
    // To solve this, we can use "margin-right: auto;" (Such as for example in  &__icon-star element)

    &__heading {

    }

    &__stars {
        margin-right: auto;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        
    }

    &__rating {

    }

    &__rating-average {

    }

    &__rating-count {

    }
}